// Simple CSS (only) tooltips

// can be attached to almost any element
// basic usage: <em data-tooltip="em em em em em">em</em>
// used pixels here, so no mess when changing CSS vars.
// :after   the tooltip content itself


[data-tooltip] {

  position: relative;
  &:after {
    content:     attr(data-tooltip);
    z-index: 20000;
    border-radius: var(--space-xs);
    font-weight: normal;
    font-style: normal;
    font-size:   10px;
    line-height: 10px;
    background:  var(--color-ma-5);
    color:       var(--color-ma-1);
    padding:     var(--space-xs) var(--space-xs);
    white-space: nowrap;
    font-family: var(--font-standard); // reset
    transition: opacity .1s;
    //transition-delay: 100ms;
    //box-shadow: 0 var(--space-xs) var(--space-m) var(--space-xs) var(--shadow-2);
    box-shadow: 0 0 0 var(--space-px)  var(--color-ma-1);
    opacity: 0;
    position: absolute;
    visibility: hidden;
    pointer-events: none;
    left:      50%;
    bottom:    calc(100% + var(--space-xs));
    top:       auto;
    transform: translateX(-50%);
  }

  &:hover, &:focus {
    &:after {
      visibility: visible;
      opacity: 1;
    }
  }
}

// top is standard

[data-tooltip].tooltip-r:after {
  left:    calc(100% + var(--space-xs));
  bottom:   auto;
  top:      50%;
  transform: translateY(-50%);
}

[data-tooltip].tooltip-c:after {
  left:     50%;
  top:      50%;
  bottom:   auto;
  transform: translateY(-50%) translateX(-50%);
}

[data-tooltip].tooltip-b:after {
  left:     50%;
  top:     calc(100% + var(--space-xs));
  bottom:  auto;
  transform: translateX(-50%);
}

[data-tooltip].tooltip-l:after {
  left:    auto;
  right:   calc(100% + var(--space-xs));
  top:      50%;
  bottom:  auto;  
  transform: translateY(-50%);
}

